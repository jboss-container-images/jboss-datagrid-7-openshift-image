apiVersion: v1
kind: Template
labels:
  template: user-config
metadata:
  annotations:
    description: An example Red Hat JBoss Data Grid application. For more information about using this template, see https://github.com/jboss-openshift/application-templates.
    iconClass: icon-datagrid
    openshift.io/display-name: Red Hat Data Grid 7.3 (User Config)
    openshift.io/documentation-url: https://access.redhat.com/documentation/en-us/red_hat_data_grid/7.3/html/red_hat_data_grid_for_openshift/
    openshift.io/long-description: This template provides an example for configuration Red Hat Data Grid for OpenShift deployments with the ConfigMap API.
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://www.redhat.com/en/services/support
    tags: database,datagrid
  creationTimestamp: null
  name: user-config
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Provides a ping service for clustered applications.
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-ping
  spec:
    clusterIP: None
    ports:
    - name: ping
      port: 8888
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Provides a service for accessing the application over HTTPS or Hot Rod protocol.
      service.alpha.openshift.io/serving-cert-secret-name: service-certs
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: hotrod
      port: 11222
      targetPort: 11222
    - name: https
      port: 8443
      targetPort: 8443
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    serviceName: ${APPLICATION_NAME}-ping
    strategy:
      rollingParams:
        intervalSeconds: 20
        maxSurge: 1
        maxUnavailable: 1
        timeoutSeconds: 1200
        updatePeriodSeconds: 20
      type: Rolling
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: USER_CONFIG_MAP
            value: "true"
          - name: JGROUPS_PING_PROTOCOL
            value: openshift.DNS_PING
          - name: OPENSHIFT_DNS_PING_SERVICE_NAME
            value: ${APPLICATION_NAME}-ping
          image: registry.redhat.io/jboss-datagrid-7/datagrid73-openshift
          livenessProbe:
            exec:
              command:
              - /opt/datagrid/bin/livenessProbe.sh
            failureThreshold: 5
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 10
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          - containerPort: 8888
            name: ping
            protocol: TCP
          - containerPort: 11222
            name: hotrod
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /opt/datagrid/bin/readinessProbe.sh
            failureThreshold: 5
            initialDelaySeconds: 17
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: "0.5"
              memory: 512Mi
          volumeMounts:
          # [user config mod / Add a ConfigMap volume : start]
          - mountPath: /opt/datagrid/standalone/configuration/user
            name: config-volume
            readOnly: true
          # [user config mod / Add a ConfigMap volume : end]
        terminationGracePeriodSeconds: 60
        volumes:
        # [user config mod / Add a ConfigMap : start]
        - configMap:
            name: user-config
          name: config-volume
        # [user config mod / Add a ConfigMap : end]
    triggers:
    - type: ConfigChange
    volumeClaimTemplates:
    - metadata:
        name: srv-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
parameters:
- description: Specifies a name for the application.
  displayName: Application Name
  name: APPLICATION_NAME
  required: true
  value: custom-datagrid
